"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var fs=require("fs"),path=require("path"),resolve=_interopDefault(require("resolve")),prettier=require("prettier"),logger=_interopDefault(require("signale")),fs$1=require("fs-extra"),artTemplate=require("art-template"),ulid=require("ulid"),vfile=_interopDefault(require("to-vfile")),unified=_interopDefault(require("unified")),remark=_interopDefault(require("remark-parse")),matter=_interopDefault(require("remark-frontmatter")),slug=_interopDefault(require("remark-slug")),parseFrontmatter=_interopDefault(require("remark-parse-yaml")),slugify=_interopDefault(require("@sindresorhus/slugify")),find=_interopDefault(require("unist-util-find")),is=_interopDefault(require("unist-util-is")),visit=_interopDefault(require("unist-util-visit")),get=_interopDefault(require("lodash.get")),humanize=_interopDefault(require("humanize-string")),getPkgRepo=_interopDefault(require("get-pkg-repo")),findup=_interopDefault(require("find-up")),glob=require("fast-glob"),chokidar=_interopDefault(require("chokidar")),loadCfg=require("load-cfg"),WS=_interopDefault(require("ws")),merge=_interopDefault(require("deepmerge")),slug$1=_interopDefault(require("rehype-slug")),headings=_interopDefault(require("rehype-autolink-headings")),remarkDocz=_interopDefault(require("remark-docz")),rehypeDocz=_interopDefault(require("rehype-docz")),HappyPack=_interopDefault(require("happypack")),envDotProp=_interopDefault(require("env-dot-prop")),webpackBarPlugin=_interopDefault(require("webpackbar")),Config=_interopDefault(require("webpack-chain")),friendlyErrors=_interopDefault(require("friendly-errors-webpack-plugin")),htmlWebpackPlugin=_interopDefault(require("html-webpack-plugin")),manifestPlugin=_interopDefault(require("webpack-manifest-plugin")),UglifyJs=_interopDefault(require("uglifyjs-webpack-plugin")),mount=_interopDefault(require("koa-mount")),range=_interopDefault(require("koa-range")),convert=_interopDefault(require("koa-connect")),serveStatic=_interopDefault(require("koa-static")),history=_interopDefault(require("connect-history-api-fallback")),serveWaitpage=_interopDefault(require("webpack-serve-waitpage")),serve=_interopDefault(require("webpack-serve")),chalk=_interopDefault(require("chalk")),webpack=_interopDefault(require("webpack")),FSR=_interopDefault(require("react-dev-utils/FileSizeReporter")),formatWebpackMessages=_interopDefault(require("react-dev-utils/formatWebpackMessages")),printBuildError=_interopDefault(require("react-dev-utils/printBuildError")),detectPort=_interopDefault(require("detect-port")),titleize=_interopDefault(require("titleize"));const ensureSlash=(e,t)=>{const r=e.endsWith("/");return r&&!t?e.substr(e,e.length-1):!r&&t?`${e}/`:e},root=fs.realpathSync(process.cwd()),resolveApp=e=>path.resolve(root,e),resolveOwn=e=>path.resolve(__dirname,"../",e),templates=path.join(resolve.sync("docz-core"),"../templates"),packageJson=resolveApp("package.json"),servedPath=e=>ensureSlash(e,!0),docz=resolveApp(".docz"),app=path.resolve(docz,"app/"),appPublic=path.resolve(docz,"public/"),appNodeModules=resolveApp("node_modules"),appPackageJson=resolveApp("package.json"),ownNodeModules=resolveOwn("node_modules"),getDist=e=>path.join(root,e),distPublic=e=>path.join(e,"public/"),importsJs=path.resolve(app,"imports.js"),rootJs=path.resolve(app,"root.jsx"),indexJs=path.resolve(app,"index.jsx"),indexHtml=path.resolve(app,"index.html"),db=path.resolve(app,"db.json");var paths=Object.freeze({root:root,resolveApp:resolveApp,resolveOwn:resolveOwn,templates:templates,packageJson:packageJson,servedPath:servedPath,docz:docz,app:app,appPublic:appPublic,appNodeModules:appNodeModules,appPackageJson:appPackageJson,ownNodeModules:ownNodeModules,getDist:getDist,distPublic:distPublic,importsJs:importsJs,rootJs:rootJs,indexJs:indexJs,indexHtml:indexHtml,db:db});function __rest(e,t){var r={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&0>t.indexOf(s)&&(r[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);s.length>o;o++)0>t.indexOf(s[o])&&(r[s[o]]=e[s[o]])}return r}const format=e=>new Promise((t,r)=>{try{t(prettier.format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),t(e)}}),touch=(e,t)=>new Promise(async(r,s)=>{const o=/jsx?$/.test(path.extname(e))?await format(t):t,i=fs$1.createWriteStream(e);i.write(o,"utf-8"),i.on("finish",()=>r()),i.on("error",e=>s(e)),i.end()}),read=e=>new Promise((t,r)=>{let s="";const o=fs$1.createReadStream(e,{encoding:"utf-8"});o.on("data",e=>s+=e),o.on("end",()=>t(s)),o.on("error",e=>r(e))}),compiled=async e=>read(e).then(e=>artTemplate.compile(e)).catch(e=>e),{keys:keys}=Object,isFn=e=>"function"==typeof e;function omit(e,t){return keys(t).filter(t=>-1===e.indexOf(t)).reduce((e,r)=>Object.assign({},e,{[r]:t[r]}),{})}const mapToObj=e=>Array.from(e.entries()).reduce((e,[t,r])=>Object.assign({},e,{[`${t}`]:r}),{}),parseMdx=e=>{const t=vfile.readSync(e,"utf-8"),r=unified().use(remark,{type:"yaml",marker:"-"}).use(matter).use(parseFrontmatter).use(slug);return r.run(r.parse(t))},getParsedData=e=>{const t=find(e,e=>is("yaml",e));return get(t,"data.parsedValue")||{}},getHeadings=e=>{const t=[];return visit(e,"heading",e=>{const r=get(e,"data.id"),s=get(e,"depth");t.push({depth:s,slug:r,value:humanize(r)})}),t};class Entry{constructor(e,t,r){const s=this.getFilepath(t,r),o=getParsedData(e),i=this.getName(s,o);this.id=ulid.ulid(),this.filepath=s,this.link=null,this.slug=this.slugify(s),this.route=this.getRoute(o),this.name=i,this.order=o.order||0,this.menu=o.menu||null,this.headings=getHeadings(e),this.settings=o}setLink(e){this.link=`${e}/${this.filepath}`}getFilepath(e,t){const r=path.resolve(root,t),s=path.relative(r,e);return"win32"===process.platform?s.split("\\").join("/"):s}getName(e,t){const r=humanize(path.parse(e).name);return t&&t.name?t.name:r}slugify(e){const t=path.extname(e),r=e.replace(t,"");return slugify(r)}getRoute(e){return e&&e.route?e.route:`/${this.slug}`}}class Plugin{constructor(e){this.setConfig=e.setConfig,this.modifyBundlerConfig=e.modifyBundlerConfig,this.modifyBabelRc=e.modifyBabelRc,this.onCreateApp=e.onCreateApp,this.onServerListening=e.onServerListening,this.onPreBuild=e.onPreBuild,this.onPostBuild=e.onPostBuild,this.onPreRender=e.onPreRender,this.onPostRender=e.onPostRender}static runPluginsMethod(e){return(t,...r)=>{if(e&&e.length>0)for(const s of e){const e=get(s,t);isFn(e)&&e(...r)}}}static propsOfPlugins(e){return t=>e&&e.length>0&&e.map(e=>get(e,t)).filter(e=>e)}static reduceFromPlugins(e){return(t,r,...s)=>[...e||[]].reduce((e,r)=>{const o=get(r,t);return o&&isFn(o)?o(e,...s):e},r)}}function createPlugin(e){return new Plugin(e)}const repoInfo=e=>{try{const t=path.parse(findup.sync(".git")).dir,r=path.join(root,e),s=path.relative(t,r),o=path.join("/tree/master",s),i=fs$1.readJsonSync(appPackageJson),a=getPkgRepo(i);return a&&a.browsetemplate.replace("{domain}",a.domain).replace("{user}",a.user).replace("{project}",a.project).replace("{/tree/committish}",o)}catch(e){return null}},fromTemplates=e=>path.join(templates,e),getHtmlFilepath=e=>e?path.join(root,e):fromTemplates("index.tpl.html"),getPublicUrl=(e,t)=>{const r="/"===e.base?"":e.base;return t?r:`${r}/public`},writeAppFiles=async(e,t)=>{const{plugins:r,title:s,description:o,theme:i,indexHtml:a}=e,n=Plugin.propsOfPlugins(r),l=n("onPreRender"),p=n("onPostRender"),u=await compiled(fromTemplates("root.tpl.js")),c=await compiled(fromTemplates("index.tpl.js")),d=await compiled(getHtmlFilepath(a)),g=u({theme:i,isProd:!t,wrapper:e.wrapper,hashRouter:e.hashRouter,websocketUrl:`ws://${e.websocketHost}:${e.websocketPort}`}),m=c({isProd:!t,onPreRenders:l,onPostRenders:p}),h=d({title:s,description:o,publicUrl:getPublicUrl(e,t)});await touch(rootJs,g),await touch(indexJs,m),await touch(indexHtml,h)};class Entries{static async writeApp(e,t){await fs$1.ensureDir(app),await writeAppFiles(e,!!t)}constructor(e){this.repoUrl=repoInfo(e.src),this.all=new Map,this.get=(async()=>this.getMap(e))}async getMap(e){const{src:t,files:r}=e,s=glob.sync(Array.isArray(r)?[...r,"!node_modules"]:[r,"!node_modules"]),o=new Map,i=await Promise.all(s.map(async e=>{const r=await parseMdx(e),s=new Entry(r,e,t);this.repoUrl&&s.setLink(this.repoUrl);const{settings:o}=s,i=__rest(s,["settings"]);return Object.assign({},o,i)}));for(const e of i)o.set(e.filepath,e);return this.all=o,mapToObj(o)}}const writeImports=async e=>{const t=(await compiled(fromTemplates("imports.tpl.js")))({entries:Object.values(e)});await touch(path.join(app,"imports.js"),t)},updateEntries=e=>async t=>{const r=await e.get();await writeImports(r),t.setState("entries",r)},state=e=>{const t=new Entries(e),r=chokidar.watch(e.files,{ignored:/(^|[\/\\])\../});return{init:updateEntries(t),update:async e=>{const s=updateEntries(t);return r.on("change",async()=>s(e)),r.on("unlink",async()=>s(e)),r.on("raw",async(t,r,o)=>{"moved"===o.event&&"directory"===o.type&&await s(e)}),()=>r.close()}}},getInitialConfig=e=>{const t=fs$1.readJsonSync(appPackageJson,{throws:!1});return{title:e.title,description:e.description,themeConfig:e.themeConfig,ordering:e.ordering,version:get(t,"version")}},updateConfig=e=>async t=>t.setState("config",loadCfg.load("docz",getInitialConfig(e),!0)),state$1=e=>({init:updateConfig(e),update:async t=>{const r=chokidar.watch(loadCfg.finds("docz")),s=updateConfig(e);return r.on("add",async()=>s(t)),r.on("change",async()=>s(t)),r.on("unlink",async()=>s(t)),()=>r.close()}}),isSocketOpened=e=>e.readyState===WS.OPEN,sender=e=>(t,r)=>{e&&isSocketOpened(e)&&e.send(JSON.stringify({type:t,payload:r}))};class DataServer{constructor(e,t,r){this.states=new Set,this.state=new Map,e&&(this.server=new WS.Server({server:e,port:t,host:r}))}register(e){for(const t of e)this.states.add(t);return this}async init(){await Promise.all(Array.from(this.states).map(async e=>e.init&&e.init({state:this.getState(),setState:this.setState()}))),await touch(db,JSON.stringify(this.getState(),null,2))}async listen(){this.server&&this.server.on("connection",e=>{const t=this.handleConnection(e);this.server&&this.server.on("close",async()=>t())})}handleConnection(e){const t=Array.from(this.states).map(async t=>t.update&&t.update({state:this.getState(),setState:this.setState(e)}));return async()=>{const e=await Promise.all(t.filter(Boolean));for(const t of e)t&&isFn(t)&&t()}}getState(){return Array.from(this.state.entries()).reduce((e,[t,r])=>Object.assign({},e,{[t]:r}),{})}setState(e){const t=sender(e);return(e,r)=>{this.state.set(e,r),t(`state.${e}`,r)}}}const PRESETS_REACT=/@babel\/preset-env|@babel\/preset-react|babel-preset-react-app|next\/babel|razzle/,PRESET_TS=/@babel\/preset-typescript/,getPresets=(e,{presets:t})=>{const r=t&&t.length>0,s=!r||t.every(e=>!PRESETS_REACT.test(e)),o=!r||t.every(e=>!PRESET_TS.test(e)),i=s?[[require.resolve("babel-preset-react-app"),{flow:!e.typescript}]]:[];return o&&e.typescript&&i.push(require.resolve("@babel/preset-typescript")),i},PRESETS_WITH_DYNAMIC=/babel-preset-react-app|next\/babel|razzle/,DYNAMIC_IMPORT=/(babel-|@babel\/)plugin-syntax-dynamic-import/,HOT_LOADER=/react-hot-loader\/babel/,DOCGEN=/babel-plugin-react-docgen/,getPlugins=(e,t,{presets:r,plugins:s})=>{const o=[],i="production"===t,a=r&&r.length>0,n=s.every(e=>!HOT_LOADER.test(e)),l=s.every(e=>!DOCGEN.test(e)),p=a&&r.every(e=>!PRESETS_WITH_DYNAMIC.test(e))&&s.every(e=>!DYNAMIC_IMPORT.test(e));return n&&!i&&o.push(require.resolve("react-hot-loader/babel")),l&&e.propsParser&&!e.typescript&&o.push([require.resolve("babel-plugin-react-docgen"),{resolver:"findAllExportedComponentDefinitions"}]),p&&o.push(require.resolve("@babel/plugin-syntax-dynamic-import")),o},getBabelConfig=async(e,t)=>{const r=loadCfg.load("babel",{presets:[],plugins:[]}),s=getPresets(e,r),o=getPlugins(e,t,r),i=merge(r,{presets:s,plugins:o,cacheDirectory:!e.debug,babelrc:!1}),a=Plugin.reduceFromPlugins(e.plugins)("modifyBabelRc",i,e);return e.modifyBabelRc(a,e)};class Bundler{constructor(e){const{args:t,config:r,server:s,build:o}=e;this.args=t,this.config=r,this.server=s,this.builder=o}async getConfig(e){const t=await getBabelConfig(this.args,e),r=this.mountConfig(this.config(t),e);return this.args.modifyBundlerConfig(r,!this.isProd(e),this.args)}async createServer(e){const t=Plugin.runPluginsMethod(this.args.plugins);return this.server(e,{onCreateApp(e){t("onCreateApp",e)},OnServerListening(e){t("onServerListening",e)}})}async build(e){const t=getDist(this.args.dest);root===path.resolve(t)&&(logger.fatal(Error('Unexpected option: "dest" cannot be set to the current working directory.')),process.exit(1)),await this.builder(e,t)}mountConfig(e,t){const{plugins:r}=this.args;return Plugin.reduceFromPlugins(r)("modifyBundlerConfig",e,!this.isProd(t),this.args)}isProd(e){return"production"===e}}const config={type:"yaml",marker:"-",properties:{"aria-hidden":!0},content:{type:"element",tagName:"span",properties:{className:["icon-link"]},children:[{type:"text",value:"#"}]}},remarkPlugins=[matter,remarkDocz],rehypePlugins=[rehypeDocz,slug$1,headings],setupHappypack=(e,t,r)=>{const s={id:"jsx",verbose:t.debug,loaders:[{loader:require.resolve("babel-loader"),options:r}]};t.propsParser&&t.typescript&&s.loaders.push({loader:require.resolve("react-docgen-typescript-loader")});const o={id:"mdx",verbose:t.debug,loaders:[{loader:require.resolve("babel-loader"),options:Object.assign({},r,{plugins:r.plugins.filter(e=>/react\-hot\-loader\/babel/.test(e)).filter(e=>/babel\-plugin\-react\-docgen/.test(e))})}]};e.plugin("happypack-jsx").use(HappyPack,[s]),e.plugin("happypack-mdx").use(HappyPack,[o])},js=(e,t)=>{const r=path.resolve(root,t.src);e.module.rule("js").test(/\.(js|jsx|mjs)$/).include.add(r).add(docz).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},ts=(e,t)=>{const r=path.resolve(root,t.src);e.module.rule("ts").test(/\.(ts|tsx)$/).include.add(r).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},mdx=(e,t)=>{const{mdPlugins:r,hastPlugins:s}=t,o=path.resolve(root,t.src);e.module.rule("mdx").test(/\.md?x$/).include.add(o).end().exclude.add(/node_modules/).end().use("happypack-mdx").loader("happypack/loader?id=mdx").end().use("mdx-loader").loader(require.resolve("@mdx-js/loader")).options(Object.assign({},config,{mdPlugins:r.concat(remarkPlugins),hastPlugins:s.concat(rehypePlugins)}))},INLINE_LIMIT=1e4,images=e=>{e.module.rule("images").test(/\.(png|jpe?g|gif)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/img/[name].[hash:8].[ext]"})},svg=e=>{e.module.rule("svg").test(/\.(svg)(\?.*)?$/).use("file-loader").loader(require.resolve("file-loader")).options({name:"static/img/[name].[hash:8].[ext]"})},media=e=>{e.module.rule("media").test(/\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/media/[name].[hash:8].[ext]"})},fonts=e=>{e.module.rule("fonts").test(/\.(woff2?|eot|ttf|otf)(\?.*)?$/i).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/fonts/[name].[hash:8].[ext]"})},populateNodePath=()=>(envDotProp.get("node.path")||"").split(path.delimiter).filter(e=>e&&!path.isAbsolute(e)).map(e=>path.resolve(root,e)).join(path.delimiter),configDotEnv=()=>{const e=envDotProp.get("node.env"),t=resolveApp(".env");[`${t}.${e}.local`,`${t}.${e}`,"test"!==e&&`${t}.local`,t].filter(Boolean).forEach(e=>{require("dotenv").config({path:e})})},setEnv=e=>{envDotProp.set("babel.env",e),envDotProp.set("node.env",e),configDotEnv(),populateNodePath()},getClientEnvironment=e=>{const t=/^(REACT_APP_)|(ANGULAR_APP_)|(VUE_APP_)|(DOCZ_)/i,r=Object.keys(process.env).filter(e=>t.test(e)).reduce((e,t)=>(e[t]=process.env[t],e),{NODE_ENV:envDotProp.get("node.env")||"development",PUBLIC_URL:e,WEBPACK_SERVE_OVERLAY_WS_URL:envDotProp.get("webpack.server.overlay.ws.url")}),s={"process.env":Object.keys(r).reduce((e,t)=>(e[t]=JSON.stringify(r[t]),e),{})};return{raw:r,stringified:s}},uglify=new UglifyJs({parallel:!0,cache:!0,sourceMap:!0,uglifyOptions:{parse:{ecma:8},compress:{ecma:5,warnings:!1,comparisons:!1},mangle:{safari10:!0},output:{ecma:5,comments:!1,ascii_only:!0}}}),createConfig=(e,t)=>r=>{const{debug:s,host:o,port:i,protocol:a}=e,n=new Config,l="production"===t,p=servedPath(e.base),u=getDist(e.dest),c=path.resolve(root,e.src);n.context(root),n.set("mode",t),n.when(s,e=>e.devtool("source-map")),n.when(!l,e=>e.devtool("cheap-module-eval-source-map")),n.node.merge({child_process:"empty",dgram:"empty",fs:"empty",net:"empty",tls:"empty"});n.output.pathinfo(!0).path(u).publicPath(l?p:"/").when(l,e=>e.filename("static/js/[name].[hash].js").sourceMapFilename("static/js/[name].[hash].js.map").chunkFilename("static/js/[name].[chunkhash:8].js"),e=>e.filename("static/js/[name].js").sourceMapFilename("static/js/[name].js.map")).crossOriginLoading("anonymous"),n.merge({optimization:Object.assign({nodeEnv:t,namedModules:!0,noEmitOnErrors:!0,splitChunks:{chunks:"all",name:"vendors"}},l&&{minimize:!0,minimizer:[uglify]})}),n.entry("app").add(require.resolve("babel-polyfill")).add(indexJs),n.resolve.set("symlinks",!0).extensions.add(".web.js").add(".mjs").add(".js").add(".json").add(".web.jsx").add(".jsx").add(".mdx").end(),e.typescript&&n.resolve.extensions.prepend(".ts").prepend(".tsx").end(),n.resolve.modules.add(ownNodeModules).add(appNodeModules).add("node_modules").add(c).add(root),n.resolveLoader.set("symlinks",!0).modules.add(ownNodeModules).add(appNodeModules).add("node_modules").add(root),js(n,e),mdx(n,e),images(n),svg(n),media(n),fonts(n),e.typescript&&ts(n,e),setupHappypack(n,e,r),n.plugin("assets-plugin").use(manifestPlugin,[{filename:"assets.json"}]),n.plugin("html-webpack-plugin").use(htmlWebpackPlugin,[Object.assign({inject:!0,template:indexHtml},l&&{minify:{removeComments:!0,collapseWhitespace:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeStyleLinkTypeAttributes:!0,keepClosingSlash:!0,minifyJS:!0,minifyCSS:!0,minifyURLs:!0}})]);const d="127.0.0.1"===o||"0.0.0.0"===o?"localhost":o;return n.when(!s&&!l,e=>{e.plugin("webpackbar").use(webpackBarPlugin,[{color:"#41b883",compiledIn:!1,name:"Client"}]),e.plugin("friendly-errors").use(friendlyErrors,[{compilationSuccessInfo:{messages:[`Your application is running at ${a}://${d}:${i}`]}}])}),n.plugin("injections").use(require("webpack/lib/DefinePlugin"),[Object.assign({},getClientEnvironment(p).stringified,{BASE_URL:JSON.stringify(p),NODE_ENV:JSON.stringify(t)})]),n.performance.hints(!1),n.toConfig()},devServerConfig=(e,t,r)=>{const s=path.resolve(__dirname,"non-existent"),o=t=>e.debug?"debug":t;return{config:t,host:e.host,port:e.port,content:[s],logLevel:o("error"),devMiddleware:{logLevel:o("silent")},hotClient:{reload:!1,logLevel:o("error"),host:e.hotHost,port:e.hotPort},add:(t,s,o)=>{s.webpack(),s.content(),t.use(range),fs$1.existsSync(appPublic)&&t.use(mount(e.base,serveStatic(appPublic))),t.use(convert(history({rewrites:[{from:/\.html$/,to:"/"}]}))),t.use(serveWaitpage(o,{title:e.title})),r.onCreateApp(t)}}},server=e=>async(t,r)=>{const s=devServerConfig(e,t,r);return{start:async()=>{const e=await serve({},s);return r.OnServerListening(e.app.server),Object.assign({},e,{close:()=>e.app.stop()})}}},{measureFileSizesBeforeBuild:measureFileSizesBeforeBuild,printFileSizesAfterBuild:printFileSizesAfterBuild}=FSR,WARN_AFTER_BUNDLE_GZIP_SIZE=524288,WARN_AFTER_CHUNK_GZIP_SIZE=1048576,hasCiEnvVar=()=>envDotProp.get("ci",!1,{parse:!0}),copyPublicFolder=async e=>{await fs$1.pathExists(appPublic)&&await fs$1.copySync(appPublic,distPublic(e),{dereference:!0,filter:e=>e!==indexHtml})},compile=e=>new Promise((t,r)=>{let s;try{s=webpack(e)}catch(e){onError(e)}s&&s.run((e,s)=>{e&&r(e),t(s)})}),builder=async(e,t)=>(logger.start("Creating an optimized production build..."),new Promise(async(r,s)=>{try{const o=await compile(e),i=formatWebpackMessages(o.toJson({},!0));return i.errors.length?s(Error(i.errors.join("\n\n"))):hasCiEnvVar()&&i.warnings.length?(logger.warn("\nTreating warnings as errors because process.env.CI = true.\nMost CI servers set it automatically.\n"),s(Error(i.warnings.join("\n\n")))):r({stats:o,previousFileSizes:t,warnings:i.warnings})}catch(e){s(e)}})),onSuccess=(e,{stats:t,previousFileSizes:r,warnings:s})=>{s.length?(logger.warn("Compiled with warnings.\n"),logger.warn(s.join("\n\n")),logger.warn("\nSearch for the "+chalk.underline(chalk.yellow("keywords"))+" to learn more about each warning."),logger.warn("To ignore, add "+chalk.cyan("// eslint-disable-next-line")+" to the line before.\n")):logger.success(chalk.green("Compiled successfully.\n")),logger.log("File sizes after gzip:\n"),printFileSizesAfterBuild(t,r,e,524288,1048576),logger.log()},onError=e=>{logger.fatal(chalk.red("Failed to compile.\n")),printBuildError(e),process.exit(1)},build=async(e,t)=>{try{await fs$1.ensureDir(t);const r=await measureFileSizesBeforeBuild(t);await fs$1.emptyDir(t),await copyPublicFolder(t);const s=await builder(e,r);onSuccess(t,s)}catch(e){onError(e)}},bundler=(e,t)=>new Bundler({args:e,build:build,config:createConfig(e,t),server:server(e)}),toOmit=["_","$0","version","help"],loadConfig=e=>{const t=loadCfg.load("docz",Object.assign({},e,{paths:paths,hashRouter:!1,plugins:[],mdPlugins:[],hastPlugins:[],themeConfig:{},modifyBundlerConfig:e=>e,modifyBabelRc:e=>e})),r=Plugin.reduceFromPlugins(t.plugins);return omit(toOmit,r("setConfig",t))},dev=async e=>{const t=envDotProp.get("node.env"),r=loadConfig(e),s=await detectPort(r.port),o=await detectPort(r.hotPort),i=await detectPort(r.websocketPort);envDotProp.set("webpack.server.overlay.ws.url",`ws://${r.hotHost}:${o}`);const a=Object.assign({},r,{websocketPort:i,hotPort:o,port:s}),n=bundler(a,t),l=await n.getConfig(t),p=await n.createServer(l),{app:u}=await p.start(),c=new DataServer(u.server,r.websocketPort,r.websocketHost);try{await fs$1.remove(app),await Entries.writeApp(a,!0),c.register([state(a),state$1(a)]),await c.init(),await c.listen()}catch(e){logger.fatal("Failed to process your server:",e),process.exit(1)}},build$1=async e=>{const t=envDotProp.get("node.env"),r=loadConfig(e),s=bundler(r,t),o=Plugin.runPluginsMethod(r.plugins),i=new DataServer;try{await fs$1.remove(app),await Entries.writeApp(r),i.register([state(r),state$1(r)]),await i.init(),await o("onPreBuild"),await s.build(await s.getConfig(t)),await o("onPostBuild")}catch(e){logger.fatal(e),process.exit(1)}};var index=Object.freeze({dev:dev,build:build$1});const getEnv=(e,t=null)=>envDotProp.get(e,t,{parse:!0}),removeScope=e=>e.replace(/^@.*\//,""),getInitialTitle=e=>{const t=get(e,"name")||"MyDoc";return titleize(humanize(removeScope(t)))},getInitialDescription=e=>get(e,"description")||"My awesome app using docz",args=e=>t=>{const r=fs$1.readJsonSync(appPackageJson,{throws:!1});setEnv(e),t.positional("base",{type:"string",default:getEnv("docz.base","/")}),t.positional("source",{alias:"src",type:"string",default:getEnv("docz.source","./")}),t.positional("files",{type:"string",default:getEnv("docz.files","**/*.mdx")}),t.positional("dest",{alias:"d",type:"string",default:getEnv("docz.dest",".docz/dist")}),t.positional("title",{type:"string",default:getEnv("docz.title",getInitialTitle(r))}),t.positional("description",{type:"string",default:getEnv("docz.description",getInitialDescription(r))}),t.positional("theme",{type:"string",default:getEnv("docz.theme","docz-theme-default")}),t.positional("typescript",{alias:"ts",type:"boolean",default:getEnv("docz.typescript",!1)}),t.positional("propsParser",{type:"boolean",default:getEnv("docz.props.parser",!0)}),t.positional("wrapper",{type:"string",default:getEnv("docz.wrapper",null)}),t.positional("indexHtml",{type:"string",default:getEnv("docz.index.html",null)}),t.positional("ordering",{type:"string",default:getEnv("docz.ordering","descending")}),t.positional("debug",{type:"boolean",default:getEnv("docz.debug",!1)}),t.positional("protocol",{type:"string",default:getEnv("docz.https",!0)?"https":"http"}),t.positional("host",{type:"string",default:getEnv("docz.host","127.0.0.1")}),t.positional("port",{alias:"p",type:"number",default:getEnv("docz.port",3e3)}),t.positional("hotHost",{type:"string",default:getEnv("docz.hot.host","127.0.0.1")}),t.positional("hotPort",{type:"number",default:getEnv("docz.hot.port",60757)}),t.positional("websocketHost",{type:"string",default:getEnv("docz.websocket.host","127.0.0.1")}),t.positional("websocketPort",{type:"number",default:getEnv("docz.websocket.port",60505)})};exports.commands=index,exports.args=args,exports.setEnv=setEnv,exports.Plugin=Plugin,exports.createPlugin=createPlugin;
