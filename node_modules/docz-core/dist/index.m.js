import{realpathSync}from"fs";import{resolve,delimiter,isAbsolute,join,extname,relative,parse}from"path";import resolve$1 from"resolve";import{format}from"prettier";import logger from"signale";import{readJsonSync,remove,ensureDir,createWriteStream,createReadStream,pathExists,copySync,emptyDir,existsSync}from"fs-extra";import{compile}from"art-template";import{ulid}from"ulid";import vfile from"to-vfile";import unified from"unified";import remark from"remark-parse";import matter from"remark-frontmatter";import slug from"remark-slug";import parseFrontmatter from"remark-parse-yaml";import slugify from"@sindresorhus/slugify";import find from"unist-util-find";import is from"unist-util-is";import visit from"unist-util-visit";import get from"lodash.get";import humanize from"humanize-string";import getPkgRepo from"get-pkg-repo";import findup from"find-up";import{sync}from"fast-glob";import chokidar from"chokidar";import{load,finds}from"load-cfg";import WS from"ws";import merge from"deepmerge";import slug$1 from"rehype-slug";import headings from"rehype-autolink-headings";import remarkDocz from"remark-docz";import rehypeDocz from"rehype-docz";import HappyPack from"happypack";import envDotProp from"env-dot-prop";import webpackBarPlugin from"webpackbar";import Config from"webpack-chain";import friendlyErrors from"friendly-errors-webpack-plugin";import htmlWebpackPlugin from"html-webpack-plugin";import manifestPlugin from"webpack-manifest-plugin";import UglifyJs from"uglifyjs-webpack-plugin";import mount from"koa-mount";import range from"koa-range";import convert from"koa-connect";import serveStatic from"koa-static";import history from"connect-history-api-fallback";import serveWaitpage from"webpack-serve-waitpage";import serve from"webpack-serve";import chalk from"chalk";import webpack from"webpack";import FSR from"react-dev-utils/FileSizeReporter";import formatWebpackMessages from"react-dev-utils/formatWebpackMessages";import printBuildError from"react-dev-utils/printBuildError";import detectPort from"detect-port";import titleize from"titleize";const ensureSlash=(e,t)=>{const r=e.endsWith("/");return r&&!t?e.substr(e,e.length-1):!r&&t?`${e}/`:e},root=realpathSync(process.cwd()),resolveApp=e=>resolve(root,e),resolveOwn=e=>resolve(__dirname,"../",e),templates=join(resolve$1.sync("docz-core"),"../templates"),packageJson=resolveApp("package.json"),servedPath=e=>ensureSlash(e,!0),docz=resolveApp(".docz"),app=resolve(docz,"app/"),appPublic=resolve(docz,"public/"),appNodeModules=resolveApp("node_modules"),appPackageJson=resolveApp("package.json"),ownNodeModules=resolveOwn("node_modules"),getDist=e=>join(root,e),distPublic=e=>join(e,"public/"),importsJs=resolve(app,"imports.js"),rootJs=resolve(app,"root.jsx"),indexJs=resolve(app,"index.jsx"),indexHtml=resolve(app,"index.html"),db=resolve(app,"db.json");var paths=Object.freeze({root:root,resolveApp:resolveApp,resolveOwn:resolveOwn,templates:templates,packageJson:packageJson,servedPath:servedPath,docz:docz,app:app,appPublic:appPublic,appNodeModules:appNodeModules,appPackageJson:appPackageJson,ownNodeModules:ownNodeModules,getDist:getDist,distPublic:distPublic,importsJs:importsJs,rootJs:rootJs,indexJs:indexJs,indexHtml:indexHtml,db:db});function __rest(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&0>t.indexOf(o)&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(o=Object.getOwnPropertySymbols(e);o.length>s;s++)0>t.indexOf(o[s])&&(r[o[s]]=e[o[s]])}return r}const format$1=e=>new Promise((t,r)=>{try{t(format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),t(e)}}),touch=(e,t)=>new Promise(async(r,o)=>{const s=/jsx?$/.test(extname(e))?await format$1(t):t,i=createWriteStream(e);i.write(s,"utf-8"),i.on("finish",()=>r()),i.on("error",e=>o(e)),i.end()}),read=e=>new Promise((t,r)=>{let o="";const s=createReadStream(e,{encoding:"utf-8"});s.on("data",e=>o+=e),s.on("end",()=>t(o)),s.on("error",e=>r(e))}),compiled=async e=>read(e).then(e=>compile(e)).catch(e=>e),{keys:keys}=Object,isFn=e=>"function"==typeof e;function omit(e,t){return keys(t).filter(t=>-1===e.indexOf(t)).reduce((e,r)=>Object.assign({},e,{[r]:t[r]}),{})}const mapToObj=e=>Array.from(e.entries()).reduce((e,[t,r])=>Object.assign({},e,{[`${t}`]:r}),{}),parseMdx=e=>{const t=vfile.readSync(e,"utf-8"),r=unified().use(remark,{type:"yaml",marker:"-"}).use(matter).use(parseFrontmatter).use(slug);return r.run(r.parse(t))},getParsedData=e=>{const t=find(e,e=>is("yaml",e));return get(t,"data.parsedValue")||{}},getHeadings=e=>{const t=[];return visit(e,"heading",e=>{const r=get(e,"data.id"),o=get(e,"depth");t.push({depth:o,slug:r,value:humanize(r)})}),t};class Entry{constructor(e,t,r){const o=this.getFilepath(t,r),s=getParsedData(e),i=this.getName(o,s);this.id=ulid(),this.filepath=o,this.link=null,this.slug=this.slugify(o),this.route=this.getRoute(s),this.name=i,this.order=s.order||0,this.menu=s.menu||null,this.headings=getHeadings(e),this.settings=s}setLink(e){this.link=`${e}/${this.filepath}`}getFilepath(e,t){const r=resolve(root,t),o=relative(r,e);return"win32"===process.platform?o.split("\\").join("/"):o}getName(e,t){const r=humanize(parse(e).name);return t&&t.name?t.name:r}slugify(e){const t=extname(e),r=e.replace(t,"");return slugify(r)}getRoute(e){return e&&e.route?e.route:`/${this.slug}`}}class Plugin{constructor(e){this.setConfig=e.setConfig,this.modifyBundlerConfig=e.modifyBundlerConfig,this.modifyBabelRc=e.modifyBabelRc,this.onCreateApp=e.onCreateApp,this.onServerListening=e.onServerListening,this.onPreBuild=e.onPreBuild,this.onPostBuild=e.onPostBuild,this.onPreRender=e.onPreRender,this.onPostRender=e.onPostRender}static runPluginsMethod(e){return(t,...r)=>{if(e&&e.length>0)for(const o of e){const e=get(o,t);isFn(e)&&e(...r)}}}static propsOfPlugins(e){return t=>e&&e.length>0&&e.map(e=>get(e,t)).filter(e=>e)}static reduceFromPlugins(e){return(t,r,...o)=>[...e||[]].reduce((e,r)=>{const s=get(r,t);return s&&isFn(s)?s(e,...o):e},r)}}function createPlugin(e){return new Plugin(e)}const repoInfo=e=>{try{const t=parse(findup.sync(".git")).dir,r=join(root,e),o=relative(t,r),s=join("/tree/master",o),i=readJsonSync(appPackageJson),n=getPkgRepo(i);return n&&n.browsetemplate.replace("{domain}",n.domain).replace("{user}",n.user).replace("{project}",n.project).replace("{/tree/committish}",s)}catch(e){return null}},fromTemplates=e=>join(templates,e),getHtmlFilepath=e=>e?join(root,e):fromTemplates("index.tpl.html"),getPublicUrl=(e,t)=>{const r="/"===e.base?"":e.base;return t?r:`${r}/public`},writeAppFiles=async(e,t)=>{const{plugins:r,title:o,description:s,theme:i,indexHtml:n}=e,a=Plugin.propsOfPlugins(r),l=a("onPreRender"),p=a("onPostRender"),c=await compiled(fromTemplates("root.tpl.js")),d=await compiled(fromTemplates("index.tpl.js")),u=await compiled(getHtmlFilepath(n)),m=c({theme:i,isProd:!t,wrapper:e.wrapper,hashRouter:e.hashRouter,websocketUrl:`ws://${e.websocketHost}:${e.websocketPort}`}),g=d({isProd:!t,onPreRenders:l,onPostRenders:p}),f=u({title:o,description:s,publicUrl:getPublicUrl(e,t)});await touch(rootJs,m),await touch(indexJs,g),await touch(indexHtml,f)};class Entries{static async writeApp(e,t){await ensureDir(app),await writeAppFiles(e,!!t)}constructor(e){this.repoUrl=repoInfo(e.src),this.all=new Map,this.get=(async()=>this.getMap(e))}async getMap(e){const{src:t,files:r}=e,o=sync(Array.isArray(r)?[...r,"!node_modules"]:[r,"!node_modules"]),s=new Map,i=await Promise.all(o.map(async e=>{const r=await parseMdx(e),o=new Entry(r,e,t);this.repoUrl&&o.setLink(this.repoUrl);const{settings:s}=o,i=__rest(o,["settings"]);return Object.assign({},s,i)}));for(const e of i)s.set(e.filepath,e);return this.all=s,mapToObj(s)}}const writeImports=async e=>{const t=(await compiled(fromTemplates("imports.tpl.js")))({entries:Object.values(e)});await touch(join(app,"imports.js"),t)},updateEntries=e=>async t=>{const r=await e.get();await writeImports(r),t.setState("entries",r)},state=e=>{const t=new Entries(e),r=chokidar.watch(e.files,{ignored:/(^|[\/\\])\../});return{init:updateEntries(t),update:async e=>{const o=updateEntries(t);return r.on("change",async()=>o(e)),r.on("unlink",async()=>o(e)),r.on("raw",async(t,r,s)=>{"moved"===s.event&&"directory"===s.type&&await o(e)}),()=>r.close()}}},getInitialConfig=e=>{const t=readJsonSync(appPackageJson,{throws:!1});return{title:e.title,description:e.description,themeConfig:e.themeConfig,ordering:e.ordering,version:get(t,"version")}},updateConfig=e=>async t=>t.setState("config",load("docz",getInitialConfig(e),!0)),state$1=e=>({init:updateConfig(e),update:async t=>{const r=chokidar.watch(finds("docz")),o=updateConfig(e);return r.on("add",async()=>o(t)),r.on("change",async()=>o(t)),r.on("unlink",async()=>o(t)),()=>r.close()}}),isSocketOpened=e=>e.readyState===WS.OPEN,sender=e=>(t,r)=>{e&&isSocketOpened(e)&&e.send(JSON.stringify({type:t,payload:r}))};class DataServer{constructor(e,t,r){this.states=new Set,this.state=new Map,e&&(this.server=new WS.Server({server:e,port:t,host:r}))}register(e){for(const t of e)this.states.add(t);return this}async init(){await Promise.all(Array.from(this.states).map(async e=>e.init&&e.init({state:this.getState(),setState:this.setState()}))),await touch(db,JSON.stringify(this.getState(),null,2))}async listen(){this.server&&this.server.on("connection",e=>{const t=this.handleConnection(e);this.server&&this.server.on("close",async()=>t())})}handleConnection(e){const t=Array.from(this.states).map(async t=>t.update&&t.update({state:this.getState(),setState:this.setState(e)}));return async()=>{const e=await Promise.all(t.filter(Boolean));for(const t of e)t&&isFn(t)&&t()}}getState(){return Array.from(this.state.entries()).reduce((e,[t,r])=>Object.assign({},e,{[t]:r}),{})}setState(e){const t=sender(e);return(e,r)=>{this.state.set(e,r),t(`state.${e}`,r)}}}const PRESETS_REACT=/@babel\/preset-env|@babel\/preset-react|babel-preset-react-app|next\/babel|razzle/,PRESET_TS=/@babel\/preset-typescript/,getPresets=(e,{presets:t})=>{const r=t&&t.length>0,o=!r||t.every(e=>!PRESETS_REACT.test(e)),s=!r||t.every(e=>!PRESET_TS.test(e)),i=o?[[require.resolve("babel-preset-react-app"),{flow:!e.typescript}]]:[];return s&&e.typescript&&i.push(require.resolve("@babel/preset-typescript")),i},PRESETS_WITH_DYNAMIC=/babel-preset-react-app|next\/babel|razzle/,DYNAMIC_IMPORT=/(babel-|@babel\/)plugin-syntax-dynamic-import/,HOT_LOADER=/react-hot-loader\/babel/,DOCGEN=/babel-plugin-react-docgen/,getPlugins=(e,t,{presets:r,plugins:o})=>{const s=[],i="production"===t,n=r&&r.length>0,a=o.every(e=>!HOT_LOADER.test(e)),l=o.every(e=>!DOCGEN.test(e)),p=n&&r.every(e=>!PRESETS_WITH_DYNAMIC.test(e))&&o.every(e=>!DYNAMIC_IMPORT.test(e));return a&&!i&&s.push(require.resolve("react-hot-loader/babel")),l&&e.propsParser&&!e.typescript&&s.push([require.resolve("babel-plugin-react-docgen"),{resolver:"findAllExportedComponentDefinitions"}]),p&&s.push(require.resolve("@babel/plugin-syntax-dynamic-import")),s},getBabelConfig=async(e,t)=>{const r=load("babel",{presets:[],plugins:[]}),o=getPresets(e,r),s=getPlugins(e,t,r),i=merge(r,{presets:o,plugins:s,cacheDirectory:!e.debug,babelrc:!1}),n=Plugin.reduceFromPlugins(e.plugins)("modifyBabelRc",i,e);return e.modifyBabelRc(n,e)};class Bundler{constructor(e){const{args:t,config:r,server:o,build:s}=e;this.args=t,this.config=r,this.server=o,this.builder=s}async getConfig(e){const t=await getBabelConfig(this.args,e),r=this.mountConfig(this.config(t),e);return this.args.modifyBundlerConfig(r,!this.isProd(e),this.args)}async createServer(e){const t=Plugin.runPluginsMethod(this.args.plugins);return this.server(e,{onCreateApp(e){t("onCreateApp",e)},OnServerListening(e){t("onServerListening",e)}})}async build(e){const t=getDist(this.args.dest);root===resolve(t)&&(logger.fatal(Error('Unexpected option: "dest" cannot be set to the current working directory.')),process.exit(1)),await this.builder(e,t)}mountConfig(e,t){const{plugins:r}=this.args;return Plugin.reduceFromPlugins(r)("modifyBundlerConfig",e,!this.isProd(t),this.args)}isProd(e){return"production"===e}}const config={type:"yaml",marker:"-",properties:{"aria-hidden":!0},content:{type:"element",tagName:"span",properties:{className:["icon-link"]},children:[{type:"text",value:"#"}]}},remarkPlugins=[matter,remarkDocz],rehypePlugins=[rehypeDocz,slug$1,headings],setupHappypack=(e,t,r)=>{const o={id:"jsx",verbose:t.debug,loaders:[{loader:require.resolve("babel-loader"),options:r}]};t.propsParser&&t.typescript&&o.loaders.push({loader:require.resolve("react-docgen-typescript-loader")});const s={id:"mdx",verbose:t.debug,loaders:[{loader:require.resolve("babel-loader"),options:Object.assign({},r,{plugins:r.plugins.filter(e=>/react\-hot\-loader\/babel/.test(e)).filter(e=>/babel\-plugin\-react\-docgen/.test(e))})}]};e.plugin("happypack-jsx").use(HappyPack,[o]),e.plugin("happypack-mdx").use(HappyPack,[s])},js=(e,t)=>{const r=resolve(root,t.src);e.module.rule("js").test(/\.(js|jsx|mjs)$/).include.add(r).add(docz).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},ts=(e,t)=>{const r=resolve(root,t.src);e.module.rule("ts").test(/\.(ts|tsx)$/).include.add(r).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},mdx=(e,t)=>{const{mdPlugins:r,hastPlugins:o}=t,s=resolve(root,t.src);e.module.rule("mdx").test(/\.md?x$/).include.add(s).end().exclude.add(/node_modules/).end().use("happypack-mdx").loader("happypack/loader?id=mdx").end().use("mdx-loader").loader(require.resolve("@mdx-js/loader")).options(Object.assign({},config,{mdPlugins:r.concat(remarkPlugins),hastPlugins:o.concat(rehypePlugins)}))},INLINE_LIMIT=1e4,images=e=>{e.module.rule("images").test(/\.(png|jpe?g|gif)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/img/[name].[hash:8].[ext]"})},svg=e=>{e.module.rule("svg").test(/\.(svg)(\?.*)?$/).use("file-loader").loader(require.resolve("file-loader")).options({name:"static/img/[name].[hash:8].[ext]"})},media=e=>{e.module.rule("media").test(/\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/media/[name].[hash:8].[ext]"})},fonts=e=>{e.module.rule("fonts").test(/\.(woff2?|eot|ttf|otf)(\?.*)?$/i).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/fonts/[name].[hash:8].[ext]"})},populateNodePath=()=>(envDotProp.get("node.path")||"").split(delimiter).filter(e=>e&&!isAbsolute(e)).map(e=>resolve(root,e)).join(delimiter),configDotEnv=()=>{const e=envDotProp.get("node.env"),t=resolveApp(".env");[`${t}.${e}.local`,`${t}.${e}`,"test"!==e&&`${t}.local`,t].filter(Boolean).forEach(e=>{require("dotenv").config({path:e})})},setEnv=e=>{envDotProp.set("babel.env",e),envDotProp.set("node.env",e),configDotEnv(),populateNodePath()},getClientEnvironment=e=>{const t=/^(REACT_APP_)|(ANGULAR_APP_)|(VUE_APP_)|(DOCZ_)/i,r=Object.keys(process.env).filter(e=>t.test(e)).reduce((e,t)=>(e[t]=process.env[t],e),{NODE_ENV:envDotProp.get("node.env")||"development",PUBLIC_URL:e,WEBPACK_SERVE_OVERLAY_WS_URL:envDotProp.get("webpack.server.overlay.ws.url")}),o={"process.env":Object.keys(r).reduce((e,t)=>(e[t]=JSON.stringify(r[t]),e),{})};return{raw:r,stringified:o}},uglify=new UglifyJs({parallel:!0,cache:!0,sourceMap:!0,uglifyOptions:{parse:{ecma:8},compress:{ecma:5,warnings:!1,comparisons:!1},mangle:{safari10:!0},output:{ecma:5,comments:!1,ascii_only:!0}}}),createConfig=(e,t)=>r=>{const{debug:o,host:s,port:i,protocol:n}=e,a=new Config,l="production"===t,p=servedPath(e.base),c=getDist(e.dest),d=resolve(root,e.src);a.context(root),a.set("mode",t),a.when(o,e=>e.devtool("source-map")),a.when(!l,e=>e.devtool("cheap-module-eval-source-map")),a.node.merge({child_process:"empty",dgram:"empty",fs:"empty",net:"empty",tls:"empty"});a.output.pathinfo(!0).path(c).publicPath(l?p:"/").when(l,e=>e.filename("static/js/[name].[hash].js").sourceMapFilename("static/js/[name].[hash].js.map").chunkFilename("static/js/[name].[chunkhash:8].js"),e=>e.filename("static/js/[name].js").sourceMapFilename("static/js/[name].js.map")).crossOriginLoading("anonymous"),a.merge({optimization:Object.assign({nodeEnv:t,namedModules:!0,noEmitOnErrors:!0,splitChunks:{chunks:"all",name:"vendors"}},l&&{minimize:!0,minimizer:[uglify]})}),a.entry("app").add(require.resolve("babel-polyfill")).add(indexJs),a.resolve.set("symlinks",!0).extensions.add(".web.js").add(".mjs").add(".js").add(".json").add(".web.jsx").add(".jsx").add(".mdx").end(),e.typescript&&a.resolve.extensions.prepend(".ts").prepend(".tsx").end(),a.resolve.modules.add(ownNodeModules).add(appNodeModules).add("node_modules").add(d).add(root),a.resolveLoader.set("symlinks",!0).modules.add(ownNodeModules).add(appNodeModules).add("node_modules").add(root),js(a,e),mdx(a,e),images(a),svg(a),media(a),fonts(a),e.typescript&&ts(a,e),setupHappypack(a,e,r),a.plugin("assets-plugin").use(manifestPlugin,[{filename:"assets.json"}]),a.plugin("html-webpack-plugin").use(htmlWebpackPlugin,[Object.assign({inject:!0,template:indexHtml},l&&{minify:{removeComments:!0,collapseWhitespace:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeStyleLinkTypeAttributes:!0,keepClosingSlash:!0,minifyJS:!0,minifyCSS:!0,minifyURLs:!0}})]);const u="127.0.0.1"===s||"0.0.0.0"===s?"localhost":s;return a.when(!o&&!l,e=>{e.plugin("webpackbar").use(webpackBarPlugin,[{color:"#41b883",compiledIn:!1,name:"Client"}]),e.plugin("friendly-errors").use(friendlyErrors,[{compilationSuccessInfo:{messages:[`Your application is running at ${n}://${u}:${i}`]}}])}),a.plugin("injections").use(require("webpack/lib/DefinePlugin"),[Object.assign({},getClientEnvironment(p).stringified,{BASE_URL:JSON.stringify(p),NODE_ENV:JSON.stringify(t)})]),a.performance.hints(!1),a.toConfig()},devServerConfig=(e,t,r)=>{const o=resolve(__dirname,"non-existent"),s=t=>e.debug?"debug":t;return{config:t,host:e.host,port:e.port,content:[o],logLevel:s("error"),devMiddleware:{logLevel:s("silent")},hotClient:{reload:!1,logLevel:s("error"),host:e.hotHost,port:e.hotPort},add:(t,o,s)=>{o.webpack(),o.content(),t.use(range),existsSync(appPublic)&&t.use(mount(e.base,serveStatic(appPublic))),t.use(convert(history({rewrites:[{from:/\.html$/,to:"/"}]}))),t.use(serveWaitpage(s,{title:e.title})),r.onCreateApp(t)}}},server=e=>async(t,r)=>{const o=devServerConfig(e,t,r);return{start:async()=>{const e=await serve({},o);return r.OnServerListening(e.app.server),Object.assign({},e,{close:()=>e.app.stop()})}}},{measureFileSizesBeforeBuild:measureFileSizesBeforeBuild,printFileSizesAfterBuild:printFileSizesAfterBuild}=FSR,WARN_AFTER_BUNDLE_GZIP_SIZE=524288,WARN_AFTER_CHUNK_GZIP_SIZE=1048576,hasCiEnvVar=()=>envDotProp.get("ci",!1,{parse:!0}),copyPublicFolder=async e=>{await pathExists(appPublic)&&await copySync(appPublic,distPublic(e),{dereference:!0,filter:e=>e!==indexHtml})},compile$1=e=>new Promise((t,r)=>{let o;try{o=webpack(e)}catch(e){onError(e)}o&&o.run((e,o)=>{e&&r(e),t(o)})}),builder=async(e,t)=>(logger.start("Creating an optimized production build..."),new Promise(async(r,o)=>{try{const s=await compile$1(e),i=formatWebpackMessages(s.toJson({},!0));return i.errors.length?o(Error(i.errors.join("\n\n"))):hasCiEnvVar()&&i.warnings.length?(logger.warn("\nTreating warnings as errors because process.env.CI = true.\nMost CI servers set it automatically.\n"),o(Error(i.warnings.join("\n\n")))):r({stats:s,previousFileSizes:t,warnings:i.warnings})}catch(e){o(e)}})),onSuccess=(e,{stats:t,previousFileSizes:r,warnings:o})=>{o.length?(logger.warn("Compiled with warnings.\n"),logger.warn(o.join("\n\n")),logger.warn("\nSearch for the "+chalk.underline(chalk.yellow("keywords"))+" to learn more about each warning."),logger.warn("To ignore, add "+chalk.cyan("// eslint-disable-next-line")+" to the line before.\n")):logger.success(chalk.green("Compiled successfully.\n")),logger.log("File sizes after gzip:\n"),printFileSizesAfterBuild(t,r,e,524288,1048576),logger.log()},onError=e=>{logger.fatal(chalk.red("Failed to compile.\n")),printBuildError(e),process.exit(1)},build=async(e,t)=>{try{await ensureDir(t);const r=await measureFileSizesBeforeBuild(t);await emptyDir(t),await copyPublicFolder(t);const o=await builder(e,r);onSuccess(t,o)}catch(e){onError(e)}},bundler=(e,t)=>new Bundler({args:e,build:build,config:createConfig(e,t),server:server(e)}),toOmit=["_","$0","version","help"],loadConfig=e=>{const t=load("docz",Object.assign({},e,{paths:paths,hashRouter:!1,plugins:[],mdPlugins:[],hastPlugins:[],themeConfig:{},modifyBundlerConfig:e=>e,modifyBabelRc:e=>e})),r=Plugin.reduceFromPlugins(t.plugins);return omit(toOmit,r("setConfig",t))},dev=async e=>{const t=envDotProp.get("node.env"),r=loadConfig(e),o=await detectPort(r.port),s=await detectPort(r.hotPort),i=await detectPort(r.websocketPort);envDotProp.set("webpack.server.overlay.ws.url",`ws://${r.hotHost}:${s}`);const n=Object.assign({},r,{websocketPort:i,hotPort:s,port:o}),a=bundler(n,t),l=await a.getConfig(t),p=await a.createServer(l),{app:c}=await p.start(),d=new DataServer(c.server,r.websocketPort,r.websocketHost);try{await remove(app),await Entries.writeApp(n,!0),d.register([state(n),state$1(n)]),await d.init(),await d.listen()}catch(e){logger.fatal("Failed to process your server:",e),process.exit(1)}},build$1=async e=>{const t=envDotProp.get("node.env"),r=loadConfig(e),o=bundler(r,t),s=Plugin.runPluginsMethod(r.plugins),i=new DataServer;try{await remove(app),await Entries.writeApp(r),i.register([state(r),state$1(r)]),await i.init(),await s("onPreBuild"),await o.build(await o.getConfig(t)),await s("onPostBuild")}catch(e){logger.fatal(e),process.exit(1)}};var index=Object.freeze({dev:dev,build:build$1});const getEnv=(e,t=null)=>envDotProp.get(e,t,{parse:!0}),removeScope=e=>e.replace(/^@.*\//,""),getInitialTitle=e=>{const t=get(e,"name")||"MyDoc";return titleize(humanize(removeScope(t)))},getInitialDescription=e=>get(e,"description")||"My awesome app using docz",args=e=>t=>{const r=readJsonSync(appPackageJson,{throws:!1});setEnv(e),t.positional("base",{type:"string",default:getEnv("docz.base","/")}),t.positional("source",{alias:"src",type:"string",default:getEnv("docz.source","./")}),t.positional("files",{type:"string",default:getEnv("docz.files","**/*.mdx")}),t.positional("dest",{alias:"d",type:"string",default:getEnv("docz.dest",".docz/dist")}),t.positional("title",{type:"string",default:getEnv("docz.title",getInitialTitle(r))}),t.positional("description",{type:"string",default:getEnv("docz.description",getInitialDescription(r))}),t.positional("theme",{type:"string",default:getEnv("docz.theme","docz-theme-default")}),t.positional("typescript",{alias:"ts",type:"boolean",default:getEnv("docz.typescript",!1)}),t.positional("propsParser",{type:"boolean",default:getEnv("docz.props.parser",!0)}),t.positional("wrapper",{type:"string",default:getEnv("docz.wrapper",null)}),t.positional("indexHtml",{type:"string",default:getEnv("docz.index.html",null)}),t.positional("ordering",{type:"string",default:getEnv("docz.ordering","descending")}),t.positional("debug",{type:"boolean",default:getEnv("docz.debug",!1)}),t.positional("protocol",{type:"string",default:getEnv("docz.https",!0)?"https":"http"}),t.positional("host",{type:"string",default:getEnv("docz.host","127.0.0.1")}),t.positional("port",{alias:"p",type:"number",default:getEnv("docz.port",3e3)}),t.positional("hotHost",{type:"string",default:getEnv("docz.hot.host","127.0.0.1")}),t.positional("hotPort",{type:"number",default:getEnv("docz.hot.port",60757)}),t.positional("websocketHost",{type:"string",default:getEnv("docz.websocket.host","127.0.0.1")}),t.positional("websocketPort",{type:"number",default:getEnv("docz.websocket.port",60505)})};export{index as commands,args,setEnv,Plugin,createPlugin};
